from selenium import webdriver
import time
import os

# Replace with the path to your Chrome driver executable
driver_path = "/path/to/chromedriver"

# Initialize the Chrome driver
driver = webdriver.Chrome(executable_path=driver_path)

# URL of the job candidates list page
list_page_url = "https://example.com/candidates"

# Navigate to the list page
driver.get(list_page_url)

# Function to download a candidate's resume
def download_resume(candidate_url):
    driver.get(candidate_url)
    time.sleep(2)  # Wait for the page to load

    # Find the download resume button and click it
    download_button = driver.find_element_by_css_selector("button.download-resume")
    download_button.click()

    # Wait for the resume file to download
    time.sleep(5)

# Iterate through all pages and download resumes
current_page = 1
while True:
    # Find the list of candidate links on the current page
    candidate_links = driver.find_elements_by_css_selector("a.candidate-link")

    # Download resumes for each candidate on the current page
    for link in candidate_links:
        candidate_url = link.get_attribute("href")
        download_resume(candidate_url)

    # Check if there is a next page
    try:
        next_button = driver.find_element_by_css_selector("a.next-page")
        next_button.click()
        current_page += 1
        time.sleep(2)  # Wait for the next page to load
    except:
        break  # No more pages, exit the loop

# Close the browser
driver.quit()

Here's how the script works:

Import the necessary libraries: selenium for web automation and time for adding delays.
Set the path to your Chrome driver executable.
Initialize the Chrome driver using webdriver.Chrome().
Define the URL of the job candidates list page.
Navigate to the list page using driver.get(list_page_url).
Define a function download_resume(candidate_url) to navigate to the candidate's detail page, find the download resume button, and click it.
Use a loop to iterate through all pages:

Find the list of candidate links on the current page using driver.find_elements_by_css_selector("a.candidate-link").
For each candidate link, call the download_resume(candidate_url) function to download the resume.
Check if there is a next page button using driver.find_element_by_css_selector("a.next-page").
If the next page button exists, click it and increment the current_page counter.
Wait for a short period (2 seconds) for the next page to load.
If no next page button is found, exit the loop.


After downloading all resumes, close the browser using driver.quit().

Note: You'll need to replace the CSS selectors ("button.download-resume", "a.candidate-link", "a.next-page") with the appropriate selectors for your website's HTML structure. Additionally, adjust the waiting times (time.sleep()) as necessary for your website's performance.
Also, make sure to handle situations where the resume download might fail or encounter errors, as well as manage the downloaded files (e.g., moving them to a specific directory).
